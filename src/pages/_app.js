import Head from "next/head";
import "../../public/assets/css/bootstrap-icons.css";
import "../../public/assets/css/boxicons.min.css";
import "../../public/assets/css/fontawesome.min.css";
import "../../public/assets/css/bootstrap.min.css";
import "../../public/assets/css/swiper-bundle.min.css";
import "../../public/assets/css/nice-select.css";
import "../../styles/custom.css";
import "../../public/assets/css/style.css";
import { useEffect, useState } from "react";
import 'raf/polyfill';
import { appWithTranslation } from 'next-i18next';
import localFont from 'next/font/local'

const myFont = localFont({ src: '../../public/assets/fonts/Janna-LT-Regular.ttf' })

function MyApp({ Component, pageProps }) {
  const [loading, setLoading] = useState(true);

  const handlePreloaderClose = () => {
    setLoading(false);
  };

  useEffect(() => {
    // Simulate loading for 3 seconds (adjust as needed)
    setTimeout(() => {
      setLoading(false);
    }, 3);
  }, []);
  useEffect(() => {
    import("../../public/assets/js/bootstrap.min.js");
  }, []);
  return (
    <>
      {loading ? (
        <>
          <Head>
            <title>Loading....</title>
          </Head>
        </>
      ) : (
        <>
          <Head>
            <title>Mixcar - Auto Dealer in Saudi Arabia</title>
            <meta charSet="UTF-8" />
            <meta httpEquiv="X-UA-Compatible" content="IE=edge"></meta>
            <meta
              name="viewport"
              content="width=device-width, initial-scale=1.0"
            ></meta>
            <meta name="description" content="Generated by create next app" />
            <link
              rel="icon"
              href="assets/img/sm-logo.svg"
              type="image/gif"
              sizes="20x20"
            />
            <style>
              {myFont.style}
            </style>
            <style>
              {`
                body {
                  font-family: ${myFont.variable};
                }
              `}
            </style>
          </Head>
          <Component {...pageProps} />
        </>
      )}
    </>
  );
}

export default appWithTranslation(MyApp);